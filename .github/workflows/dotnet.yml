# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  api_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install Newman
        run: npm install -g newman
      - name: Install dotnet project dependencies
        run: cd TechEaseSolutions-test && dotnet restore
      - name: Build
        run: cd TechEaseSolutions-test && dotnet build
      - name: Start Server
        run: cd TechEaseSolutions-test/server && nohup dotnet run &
      - name: Run API-Tests
        run: cd PostmanTests && newman run "TechEaseSolutions API-testing.postman_collection.json" --environment "TechEaseSln test.postman_environment.json"

  gui_tests:
    runs-on: ubuntu-latest
    needs: api_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install dotnet project dependencies
        run: cd TechEaseSolutions-test && dotnet restore
      - name: Build frontend
        run: cd TechEaseSolutions-test/client && npm install && npm run build
      - name: Build/Restore Playwright Project
        run: cd PlaywrightTests && dotnet build
      - name: Ensure browsers are installed
        run: cd PlaywrightTests && pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps
      - name: Start server
        run: cd TechEaseSolutions-test/server && nohup dotnet run &
      - name: Run GUI-tests
        run: cd PlaywrightTests && dotnet test
        
  
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [ api_tests, gui_tests ]
    steps:
      - name: Deploy App
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /srv/www/malmo/max 
            git clone https://github.com/MSvennerheim/TechEaseSolution-testRepo.git 